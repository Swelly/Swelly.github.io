<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Web Fu]]></title>
  <link href="http://Swelly.github.io/atom.xml" rel="self"/>
  <link href="http://Swelly.github.io/"/>
  <updated>2013-07-07T22:19:28-04:00</updated>
  <id>http://Swelly.github.io/</id>
  <author>
    <name><![CDATA[Wesley Carr]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Got Git]]></title>
    <link href="http://Swelly.github.io/blog/2013/07/07/got-git/"/>
    <updated>2013-07-07T00:00:00-04:00</updated>
    <id>http://Swelly.github.io/blog/2013/07/07/got-git</id>
    <content type="html"><![CDATA[<p>Quick post here. After trying for hours to customize some third party themes to this Octopress, I&rsquo;d made a mess out of my source files. So I went into the terminal and typed <code>Rake-T</code> to see if there was any quick way about removing old files and clearing the sass cache. There was and it&rsquo;s simple enough: <code>rake clean</code>. Running that command did exactly what I&rsquo;d hope it would and I saw this <img class="right" src="http://Swelly.github.io/images/gitrm.png" title="auto auto 'Terminal output'" > lovely trash bin of sorts waiting to be removed from GitHub. Only I didn&rsquo;t know how to remove the rubbish.</p>

<p>I tried <code>git rm .</code> (thought of the opposite of <code>git add .</code>) but rm . was attempting to remove hidden files. Not the right move. A quick search came up with- <code>git rm $(git ls-files &mdash;deleted)</code> and presto, they&rsquo;re correctly taken from git hub. The command might be different from Windows users, but fortunately it worked for me and I&rsquo;ll continue to use it after I clean out the sass cache.</p>

<p>Side note- My theme is broken right now, but I&rsquo;ll have it fixed by tomorrow. I tried to install and customize <a href="https://github.com/sevenadrian/foxslide" title="Foxslide">FoxSlide</a> but the customization is a bit over my head at the moment. So much sass&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Musk is The man]]></title>
    <link href="http://Swelly.github.io/blog/2013/07/06/musk-is-the-man/"/>
    <updated>2013-07-06T01:35:00-04:00</updated>
    <id>http://Swelly.github.io/blog/2013/07/06/musk-is-the-man</id>
    <content type="html"><![CDATA[<blockquote><p>Latest vertical landing rocket vid. 325M altitude, hold against wind, land w T/W&gt;1, radar in loop.</p><footer><strong>@elonmusk</strong> <cite><a href='https://twitter.com/elonmusk/statuses/353309492131278848'>twitter.com/elonmusk/statuses/&hellip;</a></cite></footer></blockquote>


<iframe width="auto" height="auto" src="http://Swelly.github.io//www.youtube.com/embed/eGimzB5QM1M" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tweaking it]]></title>
    <link href="http://Swelly.github.io/blog/2013/07/06/tweaking-it/"/>
    <updated>2013-07-06T00:55:00-04:00</updated>
    <id>http://Swelly.github.io/blog/2013/07/06/tweaking-it</id>
    <content type="html"><![CDATA[<p>Not a long post here, but I wanted to note my progress on the layout &amp; customization of this here Octopress dubbed: <strong>Web Fu</strong>. Obviously the title has changed (previously the captivating &ldquo;<em>My Octopress Blog&rdquo;</em>), but I&rsquo;ve imported Google Fonts as well to add some custom spice to my life. Honestly though, as if the people at Gizoogle didn&rsquo;t impress me enough&hellip; their font-directory over at <a href = "https://www.google.com/fonts"> Google Fonts </a> is ridiculously good-looking.</p>

<h5>A quick note and +1 to Google is their release of <a href="http://www.google.com/flights">Google Flights</a>. It rivals the international app <a href="http://Skyscanner.net">Skyscanner</a> and provides a clean interface when selecting cheaper air-fare. It looks as though Google&rsquo;s acquisition of ITASoftware back in 2010 has finally paid off. Here&rsquo;s a link to the Matrix database ITA created <a href="http://http://matrix.itasoftware.com">http://matrix.itasoftware.com</a></h5>

<p>Anyways, I&rsquo;m looking to style this theme a bit more before next week once my class dives into the Rails framework. So in the meantime, I&rsquo;m going to browse through some themes and of courseâ€¦ stay on the path towards enightenment with Ruby Koans</p>

<p><img src="http://Swelly.github.io/images/Koans.png" title="auto auto 'Don't Lose Hope'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Active Record]]></title>
    <link href="http://Swelly.github.io/blog/2013/07/05/active-record/"/>
    <updated>2013-07-05T11:30:00-04:00</updated>
    <id>http://Swelly.github.io/blog/2013/07/05/active-record</id>
    <content type="html"><![CDATA[<h2>Week 3 Day 5</h2>

<p>Over the past two days we were assigned a homework project involving the Sunlight API Gem. <a href="https://github.com/sunlightlabs/ruby-sunlight" title="Sunlight">Sunlight</a> provides various methods for obtaining information on members of congress, legislator IDs, and &lsquo;look-ups&rsquo; between places and the politicians that represent them. The project involved the latter search method. By providing the user with a search form, a zipcode is entered and then routed to (using Sinatra). Here is an example of the search method we used to GET the politicians from Sunlight and present them on another page:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">get</span> <span class="s1">&#39;/:zipcode&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="vi">@zipcode</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:zipcode</span><span class="o">]</span>
</span><span class='line'>  <span class="c1">#Defining instance variable with Sunlight app</span>
</span><span class='line'>  <span class="vi">@politicians</span> <span class="o">=</span> <span class="ss">Sunlight</span><span class="p">:</span><span class="ss">:Legislator</span><span class="o">.</span><span class="n">all_in_zipcode</span><span class="p">(</span><span class="vi">@zipcode</span><span class="p">)</span>
</span><span class='line'>  <span class="n">erb</span> <span class="ss">:politicians_in_zipcode</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>From that page (erb :politicians_in_zipcode) we were encouraged to add the ability to favorite or like certain politicians and then list them back on the index page where the search form exists. In addition to a like button, each poltician&rsquo;s party is identified by their parties color.</p>

<p>Democrat = Blue | Republican = Red | Independent = Purple</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="err">&lt;</span>%color = &#39;#9A2EFE&#39;%&gt;
</span><span class='line'>      <span class="err">&lt;</span>% if party == &quot;D&quot; %&gt;
</span><span class='line'>        <span class="err">&lt;</span>% color = &#39;#2E64FE&#39; %&gt;
</span><span class='line'>      <span class="err">&lt;</span>% elsif party == &quot;R&quot; %&gt;
</span><span class='line'>        <span class="err">&lt;</span>% color = &#39;#FE2E2E&#39; %&gt;
</span><span class='line'>
</span><span class='line'>    <span class="err">&lt;</span>% end %&gt;
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;h3</span> <span class="na">style =</span><span class="err"> </span><span class="s">&quot;color: &lt;%=color%&gt;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="err">&lt;</span>%=person.firstname%&gt; <span class="err">&lt;</span>%=person.lastname%&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img class="right" src="http://Swelly.github.io/images/Brooklyn.png" width="400" height="350" title="'Brooklyn_ZipCode'" ></p>

<p>An example from my home zipcode yields only members of the Democratic party. So, in order to display the working color code I used 11209, an area code assigned to Brooklyn, NY.
The highest difficulty I experienced in building this app was adding selected politicians to a &#8220;liked&#8221; list (essentially passing them into the ActiveRecord Database) while retaining the information provided by Sunlight. For accessiblity purposes, the form entry for liking a politician requires the press of a button. Here is the form I made:
</p>




<p>
  
<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;form</span> <span class="na">action =</span><span class="err"> </span><span class="s">&#39;/like&#39;</span> <span class="na">method =</span><span class="err"> </span><span class="s">&#39;post&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;input</span> <span class="na">type =</span><span class="err"> </span><span class="s">&quot;hidden&quot;</span> <span class="na">name =</span><span class="err"> </span><span class="s">&quot;votesmart_id&quot;</span> <span class="na">value=</span><span class="s">&quot;&lt;%= person.votesmart_id%&gt;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;button&gt;</span> Like <span class="nt">&lt;/button&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>

</p>


<p>What occurs when the user presses the Like button, is a transfer of the value :person.votesmart_id (unique ID assigned to politicians) to the POST method in main.rb-</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">post</span> <span class="s1">&#39;/like&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">liked</span> <span class="o">=</span> <span class="ss">Sunlight</span><span class="p">:</span><span class="ss">:Legislator</span><span class="o">.</span><span class="n">all_where</span><span class="p">(</span><span class="ss">:votesmart_id</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:votesmart_id</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">Politicians</span><span class="o">.</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>                    <span class="ss">:firstname</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">firstname</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:lastname</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">lastname</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:party</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">party</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:state</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">state</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:twitter_id</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">twitter_id</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:in_office</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">in_office</span><span class="p">,</span>
</span><span class='line'>                    <span class="ss">:votesmart_id</span> <span class="o">=&gt;</span> <span class="n">liked</span><span class="o">.</span><span class="n">votesmart_id</span>
</span><span class='line'>                    <span class="p">)</span>
</span><span class='line'>  <span class="n">redirect</span> <span class="n">to</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>This calls for a minor adjustment to the index page in order to display all the &lsquo;liked&rsquo; politicians. By writing <code>@politicians = Politicians.all</code> the liked politicians will be listed below the search form.
The code displayed above was relatively challenging for me. I was constantly running into a Postgres error (database error) which could not find a <code>politicians</code> class. Although I am still unsure why it occured, it was explained to me that the error resided in my migration file. When creating a new entry into my &ldquo;:politician&rdquo; table &lsquo;create_table :politician do |t|&rsquo;, ActiveRecord was looking for a :politician<em>s</em> table. Meaning it should have been plural all along. I hope to learn why the table must be plural, but either way it&rsquo;s obviously crucial to be hyper-aware of the syntax when creating a migration file. As of right now, the app is up and running.</p>

<p>Index Screenshot:</p>

<p><img class="inline" src="http://Swelly.github.io/images/Web.png" title="auto auto 'Web Browser'" ></p>

<p>GitHub link- <a href="https://github.com/Swelly/sunlight" title="Sunlight - Swelly">Here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressing]]></title>
    <link href="http://Swelly.github.io/blog/2013/07/03/octopressing/"/>
    <updated>2013-07-03T11:57:00-04:00</updated>
    <id>http://Swelly.github.io/blog/2013/07/03/octopressing</id>
    <content type="html"><![CDATA[<p>After a couple (meaning 3) tries to launch my Octopress blog, I&rsquo;ve risen, triumphant. The first tasks I&rsquo;ve set for myself regarding this blog, is to add my own interface options instead of using the default theme. I feel comfortable enough with basic CSS elements to use an alternative template and then tweak / prune the style to something similar of my own.</p>

<p>But with all the work and new techniques we learn in class I&rsquo;m sure (if I manage my time well enough) I&rsquo;ll be able to fully customize and optimize what comes through my blog posts as well as how it&rsquo;s received, visually.</p>

<p>!Test Post!</p>
]]></content>
  </entry>
  
</feed>
